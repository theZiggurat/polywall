{"version":3,"sources":["meshgen/index.js","threecontext/maps.js","constants.js","threecontext/index.js","components/three/index.js","components/colorPicker/index.js","components/colorsettings/index.js","components/meshsettings/index.js","components/publish/index.js","components/materialsettings/index.js","components/settings/index.js","App.js","serviceWorker.js","index.js"],"names":["MeshGen","this","leftbound","rightbound","topbound","bottombound","lateralOffsetMultiplier","depthOffsetMultiplier","trisize","basecolor","geometry","THREE","index","x","Math","ceil","y","color","map","i","j","random","curr_x","curr_y","vertices","push","z","offset","face1","generateColor","face2","faces","computeFaceNormals","assignUVs","computeBoundingBox","max","boundingBox","min","range","faceVertexUvs","length","v1","a","v2","b","v3","c","uvsNeedUpdate","clone","addScalar","size","console","log","ThreeContext","updateMouse","e","dx","clientX","canvas","clientWidth","dy","clientY","clientHeight","ndc","window","innerWidth","innerHeight","render","requestAnimationFrame","dragging","control","vector","unproject","camera","dir","sub","position","normalize","distance","pos","add","multiplyScalar","copy","renderer","scene","materialSettings","roughness","roughnessMap","roughnessMapChanged","vertexColors","sceneSettings","ambientColor","ambientIntensity","dirColor","dirIntensity","raycaster","background","material","loader","setCrossOrigin","lastX","lastY","genModel","bind","registerCanvas","registerLight","updateLightColor","updateLightIntensity","updateMaterial","deleteLight","id","document","getElementById","preserveDrawingBuffer","antialias","setSize","addEventListener","preventDefault","setDrag","deltaY","onresize","aspect","updateProjectionMatrix","type","name","newlight","Constants","intensity","remove","getObjectByName","light","undefined","hex","mesh","generate","model","load","tex","repeat","wrapS","wrapT","anisotropy","capabilities","getMaxAnisotropy","needsUpdate","drag","Three","className","React","Component","ColorPicker","props","onColor","onIntensity","componentDidMount","componentWillUnmount","state","setState","val","title","extra","icon","onClick","disabled","onChange","initVal","step","IntensitySlider","isNaN","span","value","style","marginLeft","Picker","PickerList","list","item","key","Menus","addlight","Item","ColorSettings","addLight","lights","types","newLights","newtypes","removeLight","filter","number","setControl","elem","curr","firstTime","message","info","overlay","changeTexture","Maps","MeshSettings","onNewVal","v","initialVal","marginTop","DecimalSlider","inputValue","Publisher","onGenerate","success","old","getSize","resX","resY","img","toDataURL","url","onChangeX","onChangeY","defaultValue","href","download","tabList","tab","contentList","tab1","tab2","Settings","App","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mbA6GeA,EADC,I,WAxGZ,aAAe,oBACXC,KAAKC,WAAa,GAClBD,KAAKE,WAAa,GAClBF,KAAKG,SAAW,GAChBH,KAAKI,aAAe,GAEpBJ,KAAKK,wBAA0B,GAC/BL,KAAKM,sBAAwB,GAC7BN,KAAKO,QAAU,G,qDAGTC,GAiBN,IAhBA,IAAIC,EAAW,IAAIC,IAOfC,EAAQ,EAERC,EAAIC,KAAKC,MAAMd,KAAKE,WAAaF,KAAKC,WAAaD,KAAKO,SACxDQ,EAAIF,KAAKC,MAAMd,KAAKG,SAAWH,KAAKI,aAAeJ,KAAKO,SAGxDS,EAAQ,IAAIN,IAAYF,GAExBS,EAAM,GACFC,EAAI,EAAGA,EAAIN,EAAGM,IAAK,CACvBD,EAAIC,GAAK,GACT,IAAI,IAAIC,EAAI,EAAGA,EAAIJ,EAAGI,IAClBF,EAAIC,GAAGC,GAAK,IAAIT,KACXG,KAAKO,SAAS,IAAOpB,KAAKO,QAAUP,KAAKK,yBACzCQ,KAAKO,SAAS,IAAOpB,KAAKO,QAAUP,KAAKK,wBAC1CQ,KAAKO,SAAUpB,KAAKM,uBAKhC,IAAK,IAAIY,EAAI,EAAGA,EAAIN,EAAE,EAAGM,IACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAE,EAAGI,IAAK,CAC1B,IAAIE,EAASrB,KAAKC,UAAYiB,EAAIlB,KAAKO,QACnCe,EAAStB,KAAKI,YAAce,EAAInB,KAAKO,QACzCE,EAASc,SAASC,KACd,IAAId,IAAcW,EAASJ,EAAIC,GAAGC,GAAGP,EAAGU,EAASL,EAAIC,GAAGC,GAAGJ,EAAGE,EAAIC,GAAGC,GAAGM,GACxE,IAAIf,IAAcW,EAASJ,EAAIC,GAAGC,EAAE,GAAGP,EAAGU,EAAStB,KAAKO,QAAUU,EAAIC,GAAGC,EAAE,GAAGJ,EAAGE,EAAIC,GAAGC,EAAE,GAAGM,GAC7F,IAAIf,IAAcW,EAASrB,KAAKO,QAAUU,EAAIC,EAAE,GAAGC,EAAE,GAAGP,EAAGU,EAAStB,KAAKO,QAAUU,EAAIC,EAAE,GAAGC,EAAE,GAAGJ,EAAGE,EAAIC,EAAE,GAAGC,EAAE,GAAGM,GAClH,IAAIf,IAAcW,EAASrB,KAAKO,QAAUU,EAAIC,EAAE,GAAGC,GAAGP,EAAGU,EAASL,EAAIC,EAAE,GAAGC,GAAGJ,EAAIE,EAAIC,EAAE,GAAGC,GAAGM,IAGlG,IAAIC,EAASf,EACTgB,EAAQ,IAAIjB,IAAYgB,EAAO,EAAGA,EAAQA,EAAS,GACvDC,EAAMX,MAAQhB,KAAK4B,cAAcZ,GACjC,IAAIa,EAAQ,IAAInB,IAAYgB,EAAO,EAAGA,EAAQA,EAAS,GACvDG,EAAMb,MAAQhB,KAAK4B,cAAcZ,GACjCP,EAASqB,MAAMN,KAAKG,EAAOE,GAE3BlB,GAAO,EAMf,OAFAF,EAASsB,qBACT/B,KAAKgC,UAAUvB,GACRA,I,gCAIDA,GACNA,EAASwB,qBAET,IAAIC,EAAMzB,EAAS0B,YAAYD,IAC3BE,EAAM3B,EAAS0B,YAAYC,IAC3BV,EAAS,IAAIhB,IAAc,EAAI0B,EAAIxB,EAAG,EAAIwB,EAAIrB,GAC9CsB,EAAQ,IAAI3B,IAAcwB,EAAItB,EAAIwB,EAAIxB,EAAGsB,EAAInB,EAAIqB,EAAIrB,GACrDe,EAAQrB,EAASqB,MAErBrB,EAAS6B,cAAc,GAAK,GAE5B,IAAK,IAAIpB,EAAI,EAAGA,EAAIY,EAAMS,OAASrB,IAAK,CAEpC,IAAIsB,EAAK/B,EAASc,SAASO,EAAMZ,GAAGuB,GAChCC,EAAKjC,EAASc,SAASO,EAAMZ,GAAGyB,GAChCC,EAAKnC,EAASc,SAASO,EAAMZ,GAAG2B,GAEpCpC,EAAS6B,cAAc,GAAGd,KAAK,CAC3B,IAAId,KAAe8B,EAAG5B,EAAIc,EAAOd,GAAGyB,EAAMzB,EAAG,GAAG4B,EAAGzB,EAAIW,EAAOX,GAAGsB,EAAMtB,EAAI,GAC3E,IAAIL,KAAegC,EAAG9B,EAAIc,EAAOd,GAAGyB,EAAMzB,EAAG,GAAG8B,EAAG3B,EAAIW,EAAOX,GAAGsB,EAAMtB,EAAI,GAC3E,IAAIL,KAAekC,EAAGhC,EAAIc,EAAOd,GAAGyB,EAAMzB,EAAG,GAAGgC,EAAG7B,EAAIW,EAAOX,GAAGsB,EAAMtB,EAAI,KAGnFN,EAASqC,eAAgB,I,oCAGftC,GAEV,OAAOA,EAAUuC,QAAQC,UADL,GACenC,KAAKO,Y,iCAGjC6B,GACPC,QAAQC,IAAIF,GACZjD,KAAKO,QAAU0C,M,MCxGR,EACH,kCADG,EAEH,kCCFG,EACI,UCwMJG,EADM,I,WAhMjB,aAAe,IAAD,gCA6JdC,YAAc,SAACC,GACX,EAAKC,GAAKD,EAAEE,QAAU,EAAKC,OAAOC,YAAc,EAChD,EAAKC,GAAKL,EAAEM,QAAU,EAAKH,OAAOI,aAAe,EACjD,EAAKC,IAAIlD,EAAM0C,EAAEE,QAAUO,OAAOC,WAAe,EAAI,EAC3D,EAAKF,IAAI/C,GAAQuC,EAAEM,QAAUG,OAAOE,YAAgB,EAAI,GAjKxC,KAoKdC,OAAS,WAIL,GAHAC,sBAAsB,EAAKD,QAGtB,EAAKE,UAAY,EAAKC,QAAS,CAShC,IAAIC,EAAS,IAAI5D,IAAc,EAAKoD,IAAIlD,EAAG,EAAKkD,IAAI/C,EAAG,IACvDuD,EAAOC,UAAU,EAAKC,QACtB,IAAIC,EAAMH,EAAOI,IAAI,EAAKF,OAAOG,UAAUC,YACvCC,GAAY,EAAKL,OAAOG,SAASlD,EAAIgD,EAAIhD,EACzCqD,EAAM,EAAKN,OAAOG,SAAS5B,QAAQgC,IAAIN,EAAIO,eAAeH,IAC9DC,EAAIrD,GAAK,EACT,EAAK4C,QAAQM,SAASM,KAAKH,GAK/B,EAAKI,SAAShB,OAAQ,EAAKiB,MAAO,EAAKX,SA1LvCxE,KAAKoF,iBAAmB,CACpBC,UAAW,EACXC,aAAc,KACdC,qBAAqB,EACrBC,aAAc9E,KAGlBV,KAAKyF,cAAgB,CACjBC,aAAc,UACdC,iBAAkB,GAClBC,SAAU,UACVC,aAAc,IAGlB7F,KAAKmF,MAAQ,IAAIzE,IACjBV,KAAK8F,UAAY,IAAIpF,IACrBV,KAAKmF,MAAMY,WAAa,IAAIrF,IAAY,SACxCV,KAAKgG,SAAW,IAAItF,IAA2B,IAC/CV,KAAKiG,QAAS,IAAIvF,KAAsBwF,gBAAe,GAEvDlG,KAAKmG,MAAQ,EACbnG,KAAKoG,MAAQ,EACbpG,KAAKuD,GAAK,EACVvD,KAAK2D,GAAK,EACV3D,KAAKoE,UAAW,EAEhBpE,KAAK8D,IAAM,IAAIpD,IAEfV,KAAKqG,SAAWrG,KAAKqG,SAASC,KAAKtG,MACnCA,KAAKuG,eAAiBvG,KAAKuG,eAAeD,KAAKtG,MAC/CA,KAAKwG,cAAgBxG,KAAKwG,cAAcF,KAAKtG,MAC7CA,KAAKyG,iBAAmBzG,KAAKyG,iBAAiBH,KAAKtG,MACnDA,KAAK0G,qBAAuB1G,KAAK0G,qBAAqBJ,KAAKtG,MAC3DA,KAAK2G,eAAiB3G,KAAK2G,eAAeL,KAAKtG,MAC/CA,KAAK4G,YAAc5G,KAAK4G,YAAYN,KAAKtG,MACzCA,KAAKqE,QAAU,K,2DAKJwC,GAAK,IAAD,OACf7G,KAAKyD,OAASqD,SAASC,eAAeF,GACtC7G,KAAKwE,OAAS,IAAI9D,IAAyB,GAAIV,KAAKyD,OAAOC,YAAe1D,KAAKyD,OAAOI,aAAc,GAAK,KACzG7D,KAAKwE,OAAOG,SAASlD,EAAI,IAEzBzB,KAAKkF,SAAW,IAAIxE,IAAqB,CACrC+C,OAAQzD,KAAKyD,OACbuD,uBAAuB,EACvBC,WAAW,IAGfjH,KAAKkF,SAASgC,QAAQlH,KAAKyD,OAAOC,YAAa1D,KAAKyD,OAAOI,cAE3D7D,KAAKyD,OAAO0D,iBAAiB,aAAa,SAAC7D,GACvCA,EAAE8D,iBACF,EAAKC,SAAQ,MAEjBrH,KAAKyD,OAAO0D,iBAAiB,WAAW,SAAC7D,GAAD,OAAO,EAAK+D,SAAQ,MAC5DrH,KAAKyD,OAAO0D,iBAAiB,cAAc,SAAC7D,GAAD,OAAO,EAAK+D,SAAQ,MAC/DrH,KAAKyD,OAAO0D,iBAAiB,YAAanH,KAAKqD,aAC/CrD,KAAKyD,OAAO0D,iBAAiB,SAAS,SAAC7D,GACnC,EAAKkB,OAAOG,SAASlD,EAAIZ,KAAKuB,IAAI,GAAIvB,KAAKqB,IAAI,EAAG,EAAKsC,OAAOG,SAASlD,EAAe,KAAX6B,EAAEgE,SAC7EhE,EAAE8D,oBAEN,IAAIG,EAAW,SAACjE,GACZ,EAAKkB,OAAOgD,OAASzD,OAAOC,WAAaD,OAAOE,YAChD,EAAKO,OAAOiD,yBACZ,EAAKvC,SAASgC,QAASnD,OAAOC,WAAYD,OAAOE,cAErDjE,KAAKyD,OAAO0D,iBAAiB,SAAUI,GACvCxD,OAAOoD,iBAAiB,SAAUI,K,oCAIxBG,EAAMC,GAEhB,IAAIC,EACJ,OAFA1E,QAAQC,IAAIuE,EAAMC,GAEVD,GACJ,IAAK,SACDE,EAAW,IAAIlH,IAAiBmH,IACvBC,UAAY,EACrB,MACJ,IAAK,cACDF,EAAW,IAAIlH,IAAuBmH,GACtC,MACJ,IAAK,UACDD,EAAW,IAAIlH,IAAmBmH,GAClC,MACJ,QACI,OAGRD,EAASD,KAAOA,EAChB3H,KAAKmF,MAAMJ,IAAI6C,K,kCAGPD,GACR3H,KAAKmF,MAAM4C,OAAO/H,KAAKmF,MAAM6C,gBAAgBL,M,uCAGhCA,EAAM3G,GACnB,IAAIiH,EAAQjI,KAAKmF,MAAM6C,gBAAgBL,QAC1BO,IAAVD,IACHA,EAAMjH,MAAQ,IAAIN,IAAYM,EAAMmH,Q,2CAGnBR,EAAMG,GACvB,IAAIG,EAAQjI,KAAKmF,MAAM6C,gBAAgBL,QAC1BO,IAAVD,IACHA,EAAMH,UAAYA,K,iCAGXH,GACP,GAAIA,EAAJ,CAIA,IAAI9E,EAAI7C,KAAKmF,MAAM6C,gBAAgBL,GAC9B9E,IACL7C,KAAKqE,QAAUxB,QALX7C,KAAKqE,QAAU,O,iCASnBnB,QAAQC,IAAInD,MACZA,KAAKoI,KAAOrI,EAAQsI,SAAS,QAC7BrI,KAAKmF,MAAM4C,OAAO/H,KAAKsI,OACvBtI,KAAKsI,MAAQ,IAAI5H,IAAWV,KAAKoI,KAAMpI,KAAKgG,UAC5ChG,KAAKsI,MAAMX,KAAO,YAClB3H,KAAKmF,MAAMJ,IAAI/E,KAAKsI,S,uCAGN,IAAD,OACVtI,KAAKoF,iBAAiBE,cAAgBtF,KAAKoF,iBAAiBG,qBAE3DvF,KAAKiG,OAAOsC,KAAKvI,KAAKoF,iBAAiBE,cAAc,SAACkD,GAClDtF,QAAQC,IAAIqF,GACZA,EAAIC,OAAS,IAAI/H,IAAc,EAAE,GACjC8H,EAAIE,MAAQhI,IACZ8H,EAAIG,MAAQjI,IACZ8H,EAAII,WAAa,EAAK1D,SAAS2D,aAAaC,mBAC5C,EAAK9C,SAASV,aAAekD,KAEjCxI,KAAKoF,iBAAiBG,qBAAsB,GAE5CvF,KAAKgG,SAASV,aAAa,KAE/BtF,KAAKgG,SAASR,aAAe9E,IAC7BV,KAAKgG,SAASX,UAAYrF,KAAKoF,iBAAiBC,UAChDrF,KAAKgG,SAAS+C,aAAc,I,8BAGxBC,GACJhJ,KAAKoE,SAAW4E,M,MC9JHC,G,mMAGb7F,EAAamD,eAAe,SAC5BnD,EAAauD,iBACbvD,EAAaiD,WACbjD,EAAac,W,+BAIb,OAAO,yBAAKgF,UAAU,UACd,4BAAQrC,GAAG,QAAQqC,UAAU,gB,GAXVC,IAAMC,Y,wGCEpBC,E,YAEjB,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KA4BVvB,OAAS,WACL,EAAKuB,MAAMvB,OAAO,EAAKuB,MAAM3B,OA9Bf,EAiClBtD,QAAU,WACN,EAAKiF,MAAMjF,QAAX,iBAhCA,EAAKkF,QAAU,EAAKA,QAAQjD,KAAb,gBACf,EAAKkD,YAAc,EAAKA,YAAYlD,KAAjB,gBACnB,EAAKyB,OAAS,EAAKA,OAAOzB,KAAZ,gBACd,EAAKjC,QAAU,EAAKA,QAAQiC,KAAb,gBACf,EAAKmD,kBAAoB,kBACrBrG,EAAaoD,cAAc,EAAK8C,MAAM5B,KAAM,EAAK4B,MAAM3B,OAC3D,EAAK+B,qBAAuB,kBACxBtG,EAAawD,YAAY,EAAK0C,MAAM3B,OACxC,EAAKgC,MAAQ,CACTtF,SAAS,EACTrD,MAAO,EAAKsI,MAAMtI,MAClB8G,UAAW,GAbD,E,qEAiBV9G,QACSkH,IAAVlH,IACCoC,EAAaqD,iBAAiBzG,KAAKsJ,MAAM3B,KAAM3G,GAC/ChB,KAAK4J,SAAS,CAAC5I,MAAOA,O,kCAIlB6I,GACR7J,KAAK4J,SAAS,CAAC9B,UAAW+B,IAC1BzG,EAAasD,qBAAqB1G,KAAKsJ,MAAM3B,KAAMkC,K,+BAYnD,OAAO,kBAAC,IAAD,CAAM5G,KAAK,QACV6G,MAAO9J,KAAKsJ,MAAM3B,KAClBuB,UAAU,OACVa,MAAO,yBAAKb,UAAU,gBACtB,kBAAC,IAAD,CAAQjG,KAAK,QAAQyE,KAAK,SAASsC,KAAK,SAASd,UAAU,SAASe,QAASjK,KAAK+H,SAClF,kBAAC,IAAD,CAAQ9E,KAAK,QAAQiG,UAAU,SAASxB,KACpC1H,KAAK2J,MAAMtF,QAAU,UAAU,SACjC4F,QAASjK,KAAKqE,QAAS6F,SAA2B,WAAjBlK,KAAKsJ,MAAM5B,MAF9C,aAIJ,kBAAC,IAAD,CACIwB,UAAU,SACViB,SAAUnK,KAAKuJ,QACfvI,MAAOhB,KAAK2J,MAAM3I,QAEtB,kBAAC,EAAD,CAAiBoJ,QAAS,EAClBC,KAAM,IACNjI,IAAK,EAAGF,IAAK,EACbiI,SAAUnK,KAAKwJ,mB,GAzDML,IAAMC,WA8DzCkB,E,2MACFX,MAAQ,CACJ7B,UAAW,EAAKwB,MAAMc,S,EAG1BD,SAAW,SAAAN,GACHU,MAAMV,KAEV,EAAKD,SAAS,CACV9B,UAAW+B,IAEf,EAAKP,MAAMa,SAASN,K,wEAGd,IACC/B,EAAa9H,KAAK2J,MAAlB7B,UACP,OACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK0C,KAAM,EAAGtB,UAAU,SAAxB,cAGA,kBAAC,IAAD,CAAKsB,KAAM,EAAGtB,UAAU,UACpB,kBAAC,IAAD,CACIA,UAAU,cACV9G,IAAKpC,KAAKsJ,MAAMlH,IAChBF,IAAKlC,KAAKsJ,MAAMpH,IAChBiI,SAAUnK,KAAKmK,SACfM,MAA4B,kBAAd3C,EAAyBA,EAAY,EACnDuC,KAAMrK,KAAKsJ,MAAMe,QAGzB,kBAAC,IAAD,CAAKG,KAAM,GACP,kBAAC,IAAD,CACItB,UAAU,QACV9G,IAAKpC,KAAKsJ,MAAMlH,IAChBF,IAAKlC,KAAKsJ,MAAMpH,IAChBwI,MAAO,CAAEC,WAAY,IACrBN,KAAMrK,KAAKsJ,MAAMe,KACjBI,MAAO3C,EACPqC,SAAUnK,KAAKmK,kB,GAxCbhB,IAAMC,W,wQC9DpC,IAAMwB,EAAS,SAAC,GAAD,IAAEjD,EAAF,EAAEA,KAAM3G,EAAR,EAAQA,MAAO0G,EAAf,EAAeA,KAAMK,EAArB,EAAqBA,OAAQ1D,EAA7B,EAA6BA,QAA7B,OACP,kBAAC,EAAD,CACIsD,KAAMA,EACN3G,MAAOA,EACP0G,KAAMA,EACNK,OAAQA,EACR1D,QAASA,KAIfwG,EAAa,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAM/C,EAAR,EAAQA,OAAQ1D,EAAhB,EAAgBA,QAAhB,OACf,yBAAK6E,UAAU,QACT4B,EAAK7J,KAAI,SAAC8J,EAAM7J,GAAP,OACP,kBAAC,EAAD,CAAQyG,KAAMoD,EAAKpD,KAAM3G,MAAO+J,EAAK/J,MAAO0G,KAAMqD,EAAKrD,KACnDK,OAAQA,EAAQ1D,QAASA,EAAS2G,IAAK9J,SAMjD+J,EAAQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACV,kBAAC,IAAD,CAAMhC,UAAU,QACd,kBAAC,IAAKiC,KAAN,CAAWlB,QAAS,kBAAMiB,EAAS,iBAAnC,qBAGA,kBAAC,IAAKC,KAAN,CAAWlB,QAAS,kBAAMiB,EAAS,aAAnC,iBAGA,kBAAC,IAAKC,KAAN,CAAWlB,QAAS,kBAAMiB,EAAS,WAAnC,iBAMeE,E,YAEjB,aAAe,IAAD,8BACV,+CAkBJC,SAAW,SAAC3D,GAAU,IAAD,EACgB,EAAKiC,MAA/B2B,EADU,EACVA,OAAQC,EADE,EACFA,MACX5K,GAFa,EACK0D,QACVkH,EAAM7D,GAAQ,GACtBC,EAAI,UAAMD,EAAN,YAAc/G,GAChB6K,EAAS,sBAAOF,GAAP,CAAe,CAAC3D,KAAMA,EAAM3G,MAAO,OAAQ0G,KAAMA,KAC1D+D,E,yVAAQ,IAAOF,EAAP,CAAc7D,KAAM6D,EAAM7D,OACxC,EAAKkC,SAAS,CAAC0B,OAAQE,EAAWD,MAAOE,KAzB/B,EA4BdC,YAAc,SAAC/D,GACX,IACM6D,EADS,EAAK7B,MAAM2B,OACDK,QAAO,SAAC9B,EAAKlJ,EAAOiL,GACzC,OAAO/B,EAAIlC,MAAQA,KAEvB,EAAKiC,SAAS,CAAC0B,OAAQE,KAjCb,EAoCdK,WAAa,SAACC,GACV,GAAIA,EAAKnC,MAAMtF,QAIX,OAHAyH,EAAKlC,SAAS,CAACvF,SAAS,IACxB,EAAKuF,SAAS,CAACvF,QAAS,YACxBjB,EAAayI,WAAW,MAI5BC,EAAKlC,SAAS,CAACvF,SAAS,IACxB,IAAI0H,EAAO,EAAKpC,MAAMtF,QACV,MAAR0H,GACAA,EAAKnC,SAAS,CAACvF,SAAS,IAC5B,EAAKuF,SAAS,CAACvF,QAASyH,IACxB1I,EAAayI,WAAWC,EAAKxC,MAAM3B,MAEhC,EAAKqE,YACJC,IAAQC,KAAK,sCAAuC,IACpD,EAAKF,WAAY,IAnDrB,EAAKrC,MAAQ,CACT2B,OAAQ,CACJ,CAAC3D,KAAM,gBAAiB3G,MAAO,UAAW0G,KAAM,eAChD,CAACC,KAAM,YAAa3G,MAAO,UAAW0G,KAAM,YAEhD6D,MAAO,CACH,QAAW,EACX,YAAe,EACf,MAAS,GAEblH,QAAS,MAEb,EAAK2H,WAAY,EACjB,EAAKX,SAAW,EAAKA,SAAS/E,KAAd,gBAChB,EAAKoF,YAAc,EAAKA,YAAYpF,KAAjB,gBAhBT,E,sEA0DV,IAAMgF,EAAStL,KAAK2J,MAAM2B,OAC1B,OAAM,kBAAC,IAAD,CAAMxB,MAAM,SAAS7G,KAAK,QAAQiG,UAAU,YAC1Ca,MACI,kBAAC,IAAD,CAAUoC,QAAS,kBAAC,EAAD,CAAOjB,SAAUlL,KAAKqL,YACzC,kBAAC,IAAD,CAAQ3D,KAAK,UAAUzE,KAAK,SAA5B,aACc,kBAAC,IAAD,CAAMyE,KAAK,YAI7B,kBAAC,EAAD,CAAYoD,KAAMQ,EAAQvD,OAAQ/H,KAAK0L,YAAarH,QAASrE,KAAK6L,kB,GArEvC1C,IAAMC,WCjC3C6B,G,OAAQ,SAAC,GAAD,IAAEmB,EAAF,EAAEA,cAAF,OACV,kBAAC,IAAD,CAAMlD,UAAU,QACd,kBAAC,IAAKiC,KAAN,CAAWlB,QAAS,kBAAImC,EAAcC,KAAtC,SAGA,kBAAC,IAAKlB,KAAN,CAAWlB,QAAS,kBAAKmC,EAAcC,KAAvC,UAGA,kBAAC,IAAKlB,KAAN,CAAWlB,QAAS,kBAAMmC,EAAc,QAAxC,WAMeE,E,YACjB,WAAYhD,GAAQ,IAAD,8BACf,4CAAMA,KAGV8C,cAAgB,SAAC5D,GACbpF,EAAagC,iBAAiBE,aAAekD,EAC7CpF,EAAagC,iBAAiBG,qBAAsB,EACpDnC,EAAauD,kBAPE,E,sEAWf,OAAO,kBAAC,IAAD,CAAM1D,KAAK,QAAQ6G,MAAM,gBAAgBZ,UAAU,cACtD,yBAAKA,UAAU,WACf,kBAAC,IAAD,CAAKA,UAAU,gBACX,kBAAC,EAAD,CACIY,MAAM,iBACNyC,SAAU,SAACC,GAAD,OAAOzM,EAAQQ,QAAUiM,GACnCpK,IAAK,GACLF,IAAK,EACLmI,KAAM,IACNoC,WAAY,MAIpB,kBAAC,IAAD,CAAKvD,UAAU,gBACX,kBAAC,EAAD,CACIY,MAAM,gBACNyC,SAAU,SAACC,GAAD,OAAOzM,EAAQO,sBAAwBkM,GACjDpK,IAAK,GACLF,IAAK,EACLmI,KAAM,IACNoC,WAAY,MAIpB,kBAAC,IAAD,CAAKvD,UAAU,gBACX,kBAAC,EAAD,CACIY,MAAM,kBACNyC,SAAU,SAACC,GAAD,OAAOzM,EAAQM,wBAAwBmM,GACjDpK,IAAK,GACLF,IAAK,EACLmI,KAAM,IACNoC,WAAY,MAIpB,kBAAC,IAAD,CAAK/B,MAAO,CAACgC,UAAW,SACpB,kBAAC,IAAD,CAAUP,QAAS,kBAAC,EAAD,CAAOC,cAAepM,KAAKoM,iBAC1C,kBAAC,IAAD,CAAQ1E,KAAK,WAAb,WACY,kBAAC,IAAD,CAAMA,KAAK,YAI/B,kBAAC,IAAD,CAAQA,KAAK,UAAUwB,UAAU,WAAWe,QAAS7G,EAAaiD,UAAlE,kB,GAtD8B8C,IAAMC,WA8D1CuD,E,2MACFhD,MAAQ,CACJiD,WAAa,EAAKtD,MAAMmD,Y,EAG5BtC,SAAW,SAAAN,GACHU,MAAMV,KAEV,EAAKD,SAAS,CACVgD,WAAY/C,IAEhB,EAAKP,MAAMiD,SAAS1C,K,wEAGd,IACC+C,EAAc5M,KAAK2J,MAAnBiD,WACP,OACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKpC,KAAM,EAAGtB,UAAU,SACnBlJ,KAAKsJ,MAAMQ,OAEhB,kBAAC,IAAD,CAAKU,KAAM,EAAGtB,UAAU,UACpB,kBAAC,IAAD,CACIA,UAAU,cACV9G,IAAKpC,KAAKsJ,MAAMlH,IAChBF,IAAKlC,KAAKsJ,MAAMpH,IAChBiI,SAAUnK,KAAKmK,SACfM,MAA6B,kBAAfmC,EAA0BA,EAAa,EACrDvC,KAAMrK,KAAKsJ,MAAMe,QAGzB,kBAAC,IAAD,CAAKG,KAAM,GACP,kBAAC,IAAD,CACItB,UAAU,QACV9G,IAAKpC,KAAKsJ,MAAMlH,IAChBF,IAAKlC,KAAKsJ,MAAMpH,IAChBwI,MAAO,CAAEC,WAAY,IACrBN,KAAMrK,KAAKsJ,MAAMe,KACjBI,MAAOmC,EACPzC,SAAUnK,KAAKmK,kB,GAxCfhB,IAAMC,WC5EbyD,G,mBAEjB,WAAYvD,GAAQ,IAAD,8BACf,4CAAMA,KAQVwD,WAAa,WACTb,IAAQC,KAAK,gBAAiB,GAAG,kBAAMD,IAAQc,QAAQ,2BACvD,IAAIC,EAAM5J,EAAa8B,SAAS+H,UAChC7J,EAAa8B,SAASgC,QAAQ,EAAKyC,MAAMuD,KAAM,EAAKvD,MAAMwD,MAC1D/J,EAAaoB,OAAOgD,OAAS,EAAKmC,MAAMuD,KAAK,EAAKvD,MAAMwD,KACxD/J,EAAaoB,OAAOiD,yBACpBrE,EAAa8B,SAAShB,OAAOd,EAAa+B,MAAO/B,EAAaoB,QAC9D,IAAI4I,EAAMhK,EAAaK,OAAO4J,UAAU,aACxC,EAAKzD,SAAS,CAAC0D,IAAKF,IACpBhK,EAAa8B,SAASgC,QAAQ8F,EAAIpM,EAAGoM,EAAIjM,GACzCqC,EAAaoB,OAAOgD,OAASwF,EAAIpM,EAAEoM,EAAIjM,EACvCqC,EAAaoB,OAAOiD,0BApBL,EAwBnB8F,UAAY,SAAC1D,GAAD,OAAS,EAAKD,SAAS,CAACsD,KAAMrD,KAxBvB,EAyBnB2D,UAAY,SAAC3D,GAAD,OAAS,EAAKD,SAAS,CAACuD,KAAMtD,KAvBtC,EAAKF,MAAQ,CACT2D,IAAK,KACLJ,KAAM,KACNC,KAAM,MALK,E,sEA4Bf,OAAO,kBAAC,IAAD,CAAMrD,MAAM,UAAU7G,KAAK,QAAQiG,UAAU,cAChD,yBAAKA,UAAU,WAEX,kBAAC,IAAD,CAAQxB,KAAK,UAAWzE,KAAK,QAAQgH,QAASjK,KAAK8M,YAAnD,YAGA,kBAAC,IAAD,KACI,kBAAC,IAAD,0BAGA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAa1K,IAAK,IAAKF,IAAK,KAC5BuL,aAAc,KAAMtD,SAAUnK,KAAKuN,cAG3C,kBAAC,IAAD,KACI,kBAAC,IAAD,2BAGA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAanL,IAAK,IAAKF,IAAK,KACxBuL,aAAc,KAAMtD,SAAUnK,KAAKwN,cAK3C,kBAAC,IAAD,CAAQ9F,KAAK,UAAWzE,KAAK,QAAQiG,UAAU,WAC3CwE,KAAM1N,KAAK2J,MAAM2D,IAAKK,SAAS,gBADnC,kB,GAxDuBxE,IAAMC,YCJvCwE,EAAU,CACZ,CACE5C,IAAK,OACL6C,IAAK,QAEP,CACE7C,IAAK,OACL6C,IAAK,SAILC,EAAc,CAChBC,KAAM,uBAAG7E,UAAU,OAAb,YACN8E,KAAM,uBAAG9E,UAAU,OAAb,aCPW+E,GDWyB9E,IAAMC,U,wLCT5C,OAAO,yBAAKF,UAAU,YAElB,yBAAKA,UAAU,cACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GAPsBC,IAAMC,YCO7B8E,MAXf,WACE,OACE,6BACE,yBAAKhF,UAAU,eACb,kBAAC,EAAD,MACA,kBAAC,EAAD,SCEYiF,QACW,cAA7BpK,OAAOqK,SAASC,UAEe,UAA7BtK,OAAOqK,SAASC,UAEhBtK,OAAOqK,SAASC,SAASC,MACvB,2DCZNC,IAASrK,OAAO,kBAAC,EAAD,MAAS4C,SAASC,eAAe,SD2H3C,kBAAmByH,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.11b4a155.chunk.js","sourcesContent":["import * as THREE from 'three';\r\n\r\nclass MeshGenerator {\r\n\r\n    constructor() {\r\n        this.leftbound = -25.0;\r\n        this.rightbound = 25.0;\r\n        this.topbound = 10.0;\r\n        this.bottombound = -10.0;\r\n\r\n        this.lateralOffsetMultiplier = 0.5;\r\n        this.depthOffsetMultiplier = 0.4;\r\n        this.trisize = 0.4;\r\n    }\r\n\r\n    generate (basecolor) {\r\n        var geometry = new THREE.Geometry();\r\n\r\n        \r\n\r\n        \r\n        \r\n\r\n        var index = 0;\r\n\r\n        var x = Math.ceil((this.rightbound - this.leftbound) / this.trisize);\r\n        var y = Math.ceil((this.topbound - this.bottombound) / this.trisize);\r\n\r\n        \r\n        let color = new THREE.Color(basecolor);\r\n\r\n        var map = [];\r\n        for(let i = 0; i < x; i++) {\r\n            map[i] = [];\r\n            for(let j = 0; j < y; j++) {\r\n                map[i][j] = new THREE.Vector3(\r\n                    (Math.random()-0.5) * this.trisize * this.lateralOffsetMultiplier,\r\n                    (Math.random()-0.5) * this.trisize * this.lateralOffsetMultiplier,\r\n                    Math.random()* this.depthOffsetMultiplier\r\n                );\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < x-1; i++) {\r\n            for (let j = 0; j < y-1; j++) {\r\n                let curr_x = this.leftbound + i * this.trisize;\r\n                let curr_y = this.bottombound + j * this.trisize;\r\n                geometry.vertices.push(\r\n                    new THREE.Vector3(curr_x + map[i][j].x, curr_y + map[i][j].y, map[i][j].z),\r\n                    new THREE.Vector3(curr_x + map[i][j+1].x, curr_y + this.trisize + map[i][j+1].y, map[i][j+1].z),\r\n                    new THREE.Vector3(curr_x + this.trisize + map[i+1][j+1].x, curr_y + this.trisize + map[i+1][j+1].y, map[i+1][j+1].z),\r\n                    new THREE.Vector3(curr_x + this.trisize + map[i+1][j].x, curr_y + map[i+1][j].y,  map[i+1][j].z)\r\n                );\r\n        \r\n                var offset = index;\r\n                var face1 = new THREE.Face3(offset+1, offset, offset + 2);\r\n                face1.color = this.generateColor(color);\r\n                var face2 = new THREE.Face3(offset+2, offset, offset + 3);\r\n                face2.color = this.generateColor(color);\r\n                geometry.faces.push(face1, face2);\r\n        \r\n                index+=4;\r\n            }\r\n            \r\n        }\r\n        geometry.computeFaceNormals();\r\n        this.assignUVs(geometry);\r\n        return geometry;\r\n\r\n    }\r\n\r\n    assignUVs(geometry) {\r\n        geometry.computeBoundingBox();\r\n\r\n        var max = geometry.boundingBox.max,\r\n            min = geometry.boundingBox.min;\r\n        var offset = new THREE.Vector2(0 - min.x, 0 - min.y);\r\n        var range = new THREE.Vector2(max.x - min.x, max.y - min.y);\r\n        var faces = geometry.faces;\r\n\r\n        geometry.faceVertexUvs[0] = [];\r\n\r\n        for (var i = 0; i < faces.length ; i++) {\r\n\r\n            var v1 = geometry.vertices[faces[i].a], \r\n                v2 = geometry.vertices[faces[i].b], \r\n                v3 = geometry.vertices[faces[i].c];\r\n\r\n            geometry.faceVertexUvs[0].push([\r\n                new THREE.Vector2((v1.x + offset.x)/range.x *2,(v1.y + offset.y)/range.y * 2),\r\n                new THREE.Vector2((v2.x + offset.x)/range.x *2,(v2.y + offset.y)/range.y * 2),\r\n                new THREE.Vector2((v3.x + offset.x)/range.x *2,(v3.y + offset.y)/range.y * 2)\r\n            ]);\r\n        }\r\n        geometry.uvsNeedUpdate = true;\r\n    }\r\n\r\n    generateColor(basecolor) {\r\n        const colorOffset = 0.1;\r\n        return basecolor.clone().addScalar(Math.random()*colorOffset);\r\n    }\r\n\r\n    setTriSize(size) {\r\n        console.log(size);\r\n        this.trisize = size;\r\n    }\r\n}\r\n\r\nconst MeshGen = new MeshGenerator();\r\nexport default MeshGen;","export default {\r\n    rough1: 'https://i.imgur.com/jCBeabr.jpg',\r\n    rough2: 'https://i.imgur.com/foiWxsQ.png'\r\n};","export default {\r\n    DEFAULT_COLOR: '#ffffff',\r\n}","import * as THREE from 'three';\r\nimport MeshGen from '../meshgen';\r\nimport Maps from './maps';\r\nimport Constants from '../constants';\r\nimport { PointLight } from 'three';\r\nimport Three from '../components/three';\r\n\r\nclass _ThreeContext {\r\n    constructor() {\r\n\r\n        this.materialSettings = {\r\n            roughness: 1.0,\r\n            roughnessMap: null,\r\n            roughnessMapChanged: true,\r\n            vertexColors: THREE.FaceColors\r\n        };\r\n\r\n        this.sceneSettings = {\r\n            ambientColor: '#0055AA',\r\n            ambientIntensity: 0.5,\r\n            dirColor: '#FFFFFF',\r\n            dirIntensity: 0.9,\r\n        }\r\n\r\n        this.scene = new THREE.Scene();\r\n        this.raycaster = new THREE.Raycaster();\r\n        this.scene.background = new THREE.Color(0x333333);\r\n        this.material = new THREE.MeshStandardMaterial({});\r\n        this.loader = new THREE.TextureLoader().setCrossOrigin(true);\r\n\r\n        this.lastX = 0.0;\r\n        this.lastY = 0.0;\r\n        this.dx = 0.0;\r\n        this.dy = 0.0;\r\n        this.dragging = false;\r\n\r\n        this.ndc = new THREE.Vector2();\r\n\r\n        this.genModel = this.genModel.bind(this);\r\n        this.registerCanvas = this.registerCanvas.bind(this);\r\n        this.registerLight = this.registerLight.bind(this);\r\n        this.updateLightColor = this.updateLightColor.bind(this);\r\n        this.updateLightIntensity = this.updateLightIntensity.bind(this);\r\n        this.updateMaterial = this.updateMaterial.bind(this);\r\n        this.deleteLight = this.deleteLight.bind(this);\r\n        this.control = null;\r\n    }\r\n\r\n    \r\n\r\n    registerCanvas(id) {\r\n        this.canvas = document.getElementById(id);\r\n        this.camera = new THREE.PerspectiveCamera( 75, this.canvas.clientWidth /  this.canvas.clientHeight, 0.1, 1000 );\r\n        this.camera.position.z = 2.5;\r\n\r\n        this.renderer = new THREE.WebGLRenderer( {\r\n            canvas: this.canvas,\r\n            preserveDrawingBuffer: true,\r\n            antialias: true\r\n        } );\r\n        \r\n        this.renderer.setSize(this.canvas.clientWidth, this.canvas.clientHeight);\r\n\r\n        this.canvas.addEventListener(\"mousedown\", (e) => {\r\n            e.preventDefault();\r\n            this.setDrag(true);\r\n        });\r\n        this.canvas.addEventListener(\"mouseup\", (e) => this.setDrag(false));\r\n        this.canvas.addEventListener(\"mouseleave\", (e) => this.setDrag(false));\r\n        this.canvas.addEventListener(\"mousemove\", this.updateMouse);\r\n        this.canvas.addEventListener(\"wheel\", (e) => {\r\n            this.camera.position.z = Math.min(10, Math.max(2, this.camera.position.z + e.deltaY * 0.002));\r\n            e.preventDefault();\r\n        });\r\n        var onresize = (e) => {\r\n            this.camera.aspect = window.innerWidth / window.innerHeight;\r\n            this.camera.updateProjectionMatrix();\r\n            this.renderer.setSize( window.innerWidth, window.innerHeight );\r\n        };\r\n        this.canvas.addEventListener('resize', onresize)\r\n        window.addEventListener('resize', onresize);\r\n        \r\n    }A\r\n\r\n    registerLight(type, name) {\r\n        console.log(type, name);\r\n        let newlight;\r\n        switch (type) {\r\n            case 'Point':\r\n                newlight = new THREE.PointLight(Constants.DEFAULT_COLOR);\r\n                newlight.intensity = 1.0;\r\n                break;\r\n            case 'Directional':\r\n                newlight = new THREE.DirectionalLight(Constants.DEFAULT_COLOR);\r\n                break;\r\n            case 'Ambient':\r\n                newlight = new THREE.AmbientLight(Constants.DEFAULT_COLOR);\r\n                break;\r\n            default:\r\n                return;\r\n            \r\n        }\r\n        newlight.name = name;\r\n        this.scene.add(newlight);\r\n    }\r\n\r\n    deleteLight(name) {\r\n        this.scene.remove(this.scene.getObjectByName(name));\r\n    }\r\n\r\n    updateLightColor(name, color){\r\n        let light = this.scene.getObjectByName(name);\r\n        if(light === undefined) return;\r\n        light.color = new THREE.Color(color.hex);\r\n    }\r\n\r\n    updateLightIntensity(name, intensity){\r\n        let light = this.scene.getObjectByName(name);\r\n        if(light === undefined) return;\r\n        light.intensity = intensity;\r\n    }\r\n\r\n    setControl(name) {\r\n        if(!name) {\r\n            this.control = null;\r\n            return;\r\n        }\r\n        let c = this.scene.getObjectByName(name);\r\n        if (!c) return;\r\n        this.control = c;\r\n    }\r\n\r\n    genModel() {\r\n        console.log(this);\r\n        this.mesh = MeshGen.generate('#EEE');\r\n        this.scene.remove(this.model);\r\n        this.model = new THREE.Mesh(this.mesh, this.material);\r\n        this.model.name = 'wallpaper';\r\n        this.scene.add(this.model);\r\n    }\r\n\r\n    updateMaterial() {\r\n        if(this.materialSettings.roughnessMap && this.materialSettings.roughnessMapChanged) {\r\n            \r\n            this.loader.load(this.materialSettings.roughnessMap, (tex) => {\r\n                console.log(tex);\r\n                tex.repeat = new THREE.Vector2(4,4);\r\n                tex.wrapS = THREE.RepeatWrapping;\r\n                tex.wrapT = THREE.RepeatWrapping;\r\n                tex.anisotropy = this.renderer.capabilities.getMaxAnisotropy();\r\n                this.material.roughnessMap = tex;\r\n            })\r\n            this.materialSettings.roughnessMapChanged = false;\r\n        } else {\r\n            this.material.roughnessMap=null;\r\n        }\r\n        this.material.vertexColors = THREE.FaceColors;\r\n        this.material.roughness = this.materialSettings.roughness;\r\n        this.material.needsUpdate = true;\r\n    }\r\n\r\n    setDrag(drag) {\r\n        this.dragging = drag;\r\n    }\r\n\r\n    updateMouse = (e) => {\r\n        this.dx = e.clientX - this.canvas.clientWidth / 2;\r\n        this.dy = e.clientY - this.canvas.clientHeight / 2;\r\n        this.ndc.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\t\tthis.ndc.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\r\n    }\r\n\r\n    render = () => {\r\n        requestAnimationFrame(this.render );\r\n        \r\n\r\n        if  (this.dragging && this.control) {\r\n            //this.raycaster.setFromCamera(this.ndc, this.camera);\r\n            //var intersects = this.raycaster.intersectObjects( this.scene.children, true);\r\n            \r\n            // if(intersects.includes(this.light1)) {\r\n            //     console.log(intersects);\r\n            //     this.light1.position.set(this.ndc.x, this.ndc.y, 2);\r\n            // } else {\r\n\r\n            var vector = new THREE.Vector3(this.ndc.x, this.ndc.y, 0.5);\r\n            vector.unproject(this.camera);\r\n            var dir = vector.sub(this.camera.position).normalize();\r\n            var distance = -this.camera.position.z / dir.z ;\r\n            var pos = this.camera.position.clone().add(dir.multiplyScalar(distance));\r\n            pos.z += 2.0;\r\n            this.control.position.copy(pos);\r\n        }\r\n\r\n        //this.cube.rotateY(0.01);\r\n\r\n        this.renderer.render( this.scene, this.camera );\r\n    }\r\n}\r\n\r\nconst ThreeContext = new _ThreeContext();\r\nexport default ThreeContext;","import React from 'react';\r\nimport ThreeContext from '../../threecontext'\r\nimport './index.css';\r\n\r\nexport default class Three extends React.Component {\r\n\r\n    componentDidMount() {\r\n        ThreeContext.registerCanvas('three');\r\n        ThreeContext.updateMaterial();\r\n        ThreeContext.genModel();\r\n        ThreeContext.render();\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"viewer\">\r\n                <canvas id=\"three\" className=\"canvas\">\r\n                </canvas>\r\n            </div>\r\n    }\r\n}","import React from 'react';\r\nimport ChromePicker from 'react-color';\r\nimport './index.css';\r\nimport {Row, Col, InputNumber, Card, Button, Slider} from 'antd';\r\nimport ThreeContext from '../../threecontext';\r\n\r\nexport default class ColorPicker extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.onColor = this.onColor.bind(this);\r\n        this.onIntensity = this.onIntensity.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n        this.control = this.control.bind(this);\r\n        this.componentDidMount = () => \r\n            ThreeContext.registerLight(this.props.type, this.props.name);\r\n        this.componentWillUnmount = () => \r\n            ThreeContext.deleteLight(this.props.name);\r\n        this.state = {\r\n            control: false,\r\n            color: this.props.color,\r\n            intensity: 1.0\r\n        };\r\n    }\r\n\r\n    onColor(color) {\r\n        if(color !== undefined) {\r\n            ThreeContext.updateLightColor(this.props.name, color);\r\n            this.setState({color: color});\r\n        }\r\n    }\r\n\r\n    onIntensity(val) {\r\n        this.setState({intensity: val});\r\n        ThreeContext.updateLightIntensity(this.props.name, val);\r\n    }\r\n\r\n    remove = () => {\r\n        this.props.remove(this.props.name);\r\n    }\r\n\r\n    control = () => {\r\n        this.props.control(this);\r\n    }\r\n\r\n    render() {\r\n        return <Card size=\"small\" \r\n                title={this.props.name} \r\n                className='card'\r\n                extra={<div className=\"buttonHolder\">\r\n                <Button size=\"small\" type=\"danger\" icon=\"delete\" className=\"button\" onClick={this.remove}/>\r\n                <Button size=\"small\" className=\"button\" type={\r\n                    this.state.control ? 'primary':'dashed'\r\n                } onClick={this.control} disabled={this.props.type=='Ambient'}>Control</Button> \r\n                </div>}>\r\n            <ChromePicker \r\n                className=\"picker\"\r\n                onChange={this.onColor}\r\n                color={this.state.color}\r\n            />\r\n            <IntensitySlider initVal={1.0} \r\n                    step={0.05}\r\n                    min={0} max={3}\r\n                    onChange={this.onIntensity}/>\r\n        </Card>\r\n    }\r\n}\r\n\r\nclass IntensitySlider extends React.Component {\r\n    state = {\r\n        intensity: this.props.initVal\r\n    };\r\n\r\n    onChange = val => {\r\n        if (isNaN(val)) {return;}\r\n            \r\n        this.setState({\r\n            intensity: val,\r\n        });\r\n        this.props.onChange(val);\r\n    };\r\n\r\n    render() {\r\n        const {intensity} = this.state;\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col span={8} className=\"title\">\r\n                        Intensity: \r\n                    </Col>\r\n                    <Col span={8} className=\"slider\">\r\n                        <Slider\r\n                            className=\"slider-main\"\r\n                            min={this.props.min}\r\n                            max={this.props.max}\r\n                            onChange={this.onChange}\r\n                            value={typeof intensity === 'number' ? intensity : 0}\r\n                            step={this.props.step}\r\n                        />\r\n                    </Col>\r\n                    <Col span={2} >\r\n                        <InputNumber\r\n                            className=\"input\"\r\n                            min={this.props.min}\r\n                            max={this.props.max}\r\n                            style={{ marginLeft: 16 }}\r\n                            step={this.props.step}\r\n                            value={intensity}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport ColorPicker from '../colorPicker';\r\nimport {message, Menu, Dropdown, Button,Card, Icon} from 'antd';\r\nimport './index.css';\r\nimport ThreeContext from '../../threecontext';\r\n\r\nconst Picker = ({name, color, type, remove, control}) => (\r\n        <ColorPicker\r\n            name={name}\r\n            color={color}\r\n            type={type}\r\n            remove={remove}\r\n            control={control}\r\n        />\r\n);\r\n\r\nconst PickerList = ({list, remove, control}) => (\r\n    <div className=\"list\">\r\n        { list.map((item, i) => \r\n            <Picker name={item.name} color={item.color} type={item.type} \r\n                remove={remove} control={control} key={i}\r\n            />\r\n        )}\r\n    </div>\r\n);\r\n\r\nconst Menus = ({addlight}) => (\r\n    <Menu className='menu'>\r\n      <Menu.Item onClick={() => addlight('Directional')}>\r\n        Directional Light\r\n      </Menu.Item>\r\n      <Menu.Item onClick={() => addlight('Ambient')}>\r\n        Ambient Light\r\n      </Menu.Item>\r\n      <Menu.Item onClick={() => addlight('Point')}>\r\n        Point Light\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\nexport default class ColorSettings extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            lights: [\r\n                {name: 'Directional 1', color: '#FFFFFF', type: 'Directional'},\r\n                {name: 'Ambient 1', color: '#FFFFFF', type: 'Ambient'},\r\n            ],\r\n            types: {\r\n                'Ambient': 1,\r\n                'Directional': 1,\r\n                'Point': 0,\r\n            },\r\n            control: null,\r\n        };\r\n        this.firstTime = true;\r\n        this.addLight = this.addLight.bind(this);\r\n        this.removeLight = this.removeLight.bind(this);\r\n    }\r\n\r\n    addLight = (type) => {\r\n        const {lights, types, control} = this.state;\r\n        let index = types[type] + 1;\r\n        let name = `${type} ${index}`;\r\n        const newLights = [...lights, {name: name, color: '#fff', type: type}];\r\n        const newtypes = {...types, type: types[type]++};\r\n        this.setState({lights: newLights, types: newtypes});\r\n    }\r\n\r\n    removeLight = (name) => {\r\n        const lights = this.state.lights;\r\n        const newLights = lights.filter((val, index, number)=> {\r\n            return val.name != name;\r\n        });\r\n        this.setState({lights: newLights});\r\n    }\r\n\r\n    setControl = (elem) => {\r\n        if (elem.state.control){\r\n            elem.setState({control: false});\r\n            this.setState({control: null});\r\n            ThreeContext.setControl(null);\r\n            return;\r\n        }\r\n\r\n        elem.setState({control: true});\r\n        let curr = this.state.control;\r\n        if (curr != null) \r\n            curr.setState({control: false});\r\n        this.setState({control: elem});\r\n        ThreeContext.setControl(elem.props.name);\r\n\r\n        if(this.firstTime) {\r\n            message.info('Drag the mouse to move light source' ,10);\r\n            this.firstTime = false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const lights = this.state.lights;\r\n        return<Card title=\"Colors\" size=\"small\" className='card grow'\r\n                extra={\r\n                    <Dropdown overlay={<Menus addlight={this.addLight}/>}>\r\n                    <Button type=\"default\" size=\"small\">\r\n                        Add Light <Icon type=\"down\"/>\r\n                    </Button>\r\n                    </Dropdown>\r\n                }>\r\n                <PickerList list={lights} remove={this.removeLight} control={this.setControl}/>\r\n        </Card> \r\n    }\r\n}","import React from 'react';\r\nimport {Menu, Dropdown, Icon, Slider, InputNumber, Row, Col, Button, Card} from 'antd';\r\nimport MeshGen from '../../meshgen';\r\nimport './index.css';\r\nimport ThreeContext from '../../threecontext';\r\nimport Maps from '../../threecontext/maps';\r\n\r\nconst Menus = ({changeTexture}) => (\r\n    <Menu className='menu'>\r\n      <Menu.Item onClick={()=>changeTexture(Maps.rough1)}>\r\n        Metal\r\n      </Menu.Item>\r\n      <Menu.Item onClick={() =>changeTexture(Maps.rough2)}>\r\n        Stucco\r\n      </Menu.Item>\r\n      <Menu.Item onClick={() => changeTexture(null)}>\r\n        None\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\nexport default class MeshSettings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    changeTexture = (tex) => {\r\n        ThreeContext.materialSettings.roughnessMap = tex;\r\n        ThreeContext.materialSettings.roughnessMapChanged = true;\r\n        ThreeContext.updateMaterial();\r\n    }\r\n\r\n    render() {\r\n        return <Card size=\"small\" title=\"Mesh Settings\" className='card basis'>\r\n            <div className=\"divider\">\r\n            <Row className=\"meshSettings\">\r\n                <DecimalSlider \r\n                    title=\"Triangle Size:\"\r\n                    onNewVal={(v) => MeshGen.trisize = v}\r\n                    min={0.2}\r\n                    max={1.0}\r\n                    step={0.02}\r\n                    initialVal={0.4}\r\n                />\r\n                \r\n            </Row>\r\n            <Row className=\"meshSettings\">\r\n                <DecimalSlider \r\n                    title=\"Depth offset:\"\r\n                    onNewVal={(v) => MeshGen.depthOffsetMultiplier = v}\r\n                    min={0.2}\r\n                    max={1.0}\r\n                    step={0.02}\r\n                    initialVal={0.4}\r\n                />\r\n                \r\n            </Row>\r\n            <Row className=\"meshSettings\">\r\n                <DecimalSlider \r\n                    title=\"Lateral offset:\"\r\n                    onNewVal={(v) => MeshGen.lateralOffsetMultiplier=v}\r\n                    min={0.2}\r\n                    max={1.0}\r\n                    step={0.02}\r\n                    initialVal={0.4}\r\n                />\r\n                \r\n            </Row>\r\n            <Row style={{marginTop: \"10px\"}}>\r\n                <Dropdown overlay={<Menus changeTexture={this.changeTexture}/>}>\r\n                    <Button type=\"default\">\r\n                        Texture <Icon type=\"down\"/>\r\n                    </Button>\r\n                </Dropdown>\r\n            </Row>\r\n            <Button type=\"primary\" className=\"generate\" onClick={ThreeContext.genModel}>\r\n                Generate\r\n            </Button>\r\n            </div>\r\n        </Card>\r\n    }\r\n}\r\n\r\nclass DecimalSlider extends React.Component {\r\n    state = {\r\n        inputValue : this.props.initialVal,\r\n    };\r\n\r\n    onChange = val => {\r\n        if (isNaN(val)) {return;}\r\n            \r\n        this.setState({\r\n            inputValue: val,\r\n        });\r\n        this.props.onNewVal(val);\r\n    };\r\n\r\n    render() {\r\n        const {inputValue} = this.state;\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col span={8} className=\"title\">\r\n                        {this.props.title}\r\n                    </Col>\r\n                    <Col span={8} className=\"slider\">\r\n                        <Slider\r\n                            className=\"slider-main\"\r\n                            min={this.props.min}\r\n                            max={this.props.max}\r\n                            onChange={this.onChange}\r\n                            value={typeof inputValue === 'number' ? inputValue : 0}\r\n                            step={this.props.step}\r\n                        />\r\n                    </Col>\r\n                    <Col span={2} >\r\n                        <InputNumber\r\n                            className=\"input\"\r\n                            min={this.props.min}\r\n                            max={this.props.max}\r\n                            style={{ marginLeft: 16 }}\r\n                            step={this.props.step}\r\n                            value={inputValue}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Row, Col, InputNumber, message, Button, Card} from 'antd';\r\nimport './index.css';\r\nimport ThreeContext from '../../threecontext';\r\nimport Three from '../three';\r\n\r\n\r\nexport default class Publisher extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            url: null,\r\n            resX: 1920,\r\n            resY: 1080,\r\n        };\r\n    }\r\n\r\n    onGenerate = () => {\r\n        message.info(\"Generating...\", 1, () => message.success(\"Done! Click Download\"));\r\n        let old = ThreeContext.renderer.getSize();\r\n        ThreeContext.renderer.setSize(this.state.resX, this.state.resY);\r\n        ThreeContext.camera.aspect = this.state.resX/this.state.resY;\r\n        ThreeContext.camera.updateProjectionMatrix();\r\n        ThreeContext.renderer.render(ThreeContext.scene, ThreeContext.camera);\r\n        var img = ThreeContext.canvas.toDataURL(\"image/png\");\r\n        this.setState({url: img});\r\n        ThreeContext.renderer.setSize(old.x, old.y);\r\n        ThreeContext.camera.aspect = old.x/old.y;\r\n        ThreeContext.camera.updateProjectionMatrix();\r\n        \r\n    }\r\n\r\n    onChangeX = (val) => this.setState({resX: val})\r\n    onChangeY = (val) => this.setState({resY: val})\r\n\r\n    render() {\r\n        return <Card title=\"Publish\" size=\"small\" className=\"card basis\">\r\n            <div className=\"publish\">\r\n                \r\n                <Button type=\"primary\"  size=\"large\" onClick={this.onGenerate}>\r\n                    Generate\r\n                </Button>\r\n                <Row>\r\n                    <Col>\r\n                        Resolution Width: \r\n                    </Col>\r\n                    <Col>\r\n                        <InputNumber min={800} max={4096} \r\n                        defaultValue={1920} onChange={this.onChangeX} />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        Resolution Height: \r\n                    </Col>\r\n                    <Col>\r\n                    <InputNumber min={400} max={2160} \r\n                        defaultValue={1080} onChange={this.onChangeY} />\r\n                    </Col>\r\n                </Row>\r\n                \r\n                \r\n                <Button type=\"primary\"  size=\"large\" className=\"download\"\r\n                    href={this.state.url} download=\"polywall.png\">\r\n                    Download\r\n                </Button>\r\n                \r\n            </div>\r\n            </Card>\r\n    }\r\n}","import React from 'react';\r\nimport {Slider, InputNumber, Row, Col, Button, Card} from 'antd';\r\n\r\nconst tabList = [\r\n    {\r\n      key: 'tab1',\r\n      tab: 'tab1',\r\n    },\r\n    {\r\n      key: 'tab2',\r\n      tab: 'tab2',\r\n    },\r\n];\r\n\r\nconst contentList = {\r\n    tab1: <p className=\"tab\">content1</p>,\r\n    tab2: <p className=\"tab\">content2</p>,\r\n  };\r\n  \r\n\r\nexport default class MaterialSettings extends React.Component {\r\n    state = {\r\n        key: 'tab1',\r\n        noTitleKey: 'app',\r\n      };\r\n    \r\n    onTabChange = (key, type) => {\r\n        console.log(key, type);\r\n        this.setState({ [type]: key });\r\n    };\r\n    \r\n    render() {\r\n        return <Card size=\"small\" title=\"Material Settings\" className='card basis color'\r\n                tabList={tabList}\r\n                activeTabKey={this.state.key}\r\n                onTabChange={key => {\r\n                this.onTabChange(key, 'key');\r\n                }}\r\n            >\r\n                {contentList[this.state.key]}\r\n            </Card>\r\n    }\r\n}","import React from 'react';\r\nimport ColorSettings from '../colorsettings';\r\nimport MeshSettings from '../meshsettings';\r\nimport ThreeContext from '../../threecontext';\r\nimport Publisher from '../publish';\r\nimport MaterialSettings from '../materialsettings';\r\nimport {Row, Col, Divider, Card, Button} from 'antd';\r\nimport './index.css';\r\n\r\nexport default class Settings extends React.Component {\r\n    render() {\r\n        return <div className=\"settings\">\r\n            \r\n            <div className=\"horizontal\">\r\n                <ColorSettings />\r\n                <MeshSettings />\r\n                <Publisher />\r\n            </div>\r\n    </div>\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Three from './components/three';\r\nimport Settings from './components/settings';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <div className=\"splitWindow\">\r\n        <Three></Three>\r\n        <Settings></Settings>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}